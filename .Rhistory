if (increase_is_bad == F &
any(df$p_chart_alert == "Below LCL")) {
"#b64083"
},
if (any(df$p_chart_alert == "Shift")) {
"#f8b434"
},
if (increase_is_bad &
any(df$p_chart_alert == "Above UCL")) {
"#b64083"
},
if (increase_is_bad == F &
any(df$p_chart_alert == "Above UCL")) {
OBI.color::prim_teal()
})
line_values = levels(df$col_ID)
# sort value for line color assignment
# make sure if violation happened before shift, color assignments are correct
#line_values_sort = line_values[order(line_values)]
# assign labels for legend
legend_lab = df %>% select(point_color, p_chart_alert) %>% group_by(point_color, p_chart_alert) %>% slice_head() %>% select(p_chart_alert) %>% pull()
# plot --------------------------------------------------------------------
plot_1 = ggplot(aes(x = date_var),
data = df) +
geom_ribbon(aes(ymin = LCL, ymax = UCL),
fill = "#CAC4CE",
alpha = 0.4) +
geom_point(
aes(y = rate, fill = point_color),
size = 3,
shape = 21,
stroke = 0
) +
scale_fill_identity(guide = guide_legend("Control chart alert"),
labels = legend_lab) +
theme_bw() +
scale_y_continuous(labels = scales::percent)
plot_2 = if (length(line_values) == 1) {
plot_1 +
geom_line(aes(y = rate, color = point_color), linewidth = 0.8) +
scale_color_identity(guide = "none")
}
else{
plot_1 +
geom_link2(aes(y = rate, color = col_ID), linewidth = 0.8) +
scale_color_gradientn(
colors = line_color_pal,
# values = scales::rescale(line_values),
values = scales::rescale(line_values),
guide = "none"
)
}
if (plot_center_line){plot_2 + geom_line(
aes(y = CL),
color = OBI.color::prim_dark_blue(),
linetype = "dashed",
linewidth = 0.75,
alpha = 0.5
)}
else{plot_2}
}
failed_iol_ctrl_chart = failed_IOL_dt %>% plot_ctrl_chart(increase_is_bad = F)
failed_iol_ctrl_chart
View(failed_iol_ctrl_chart)
levels(failed_IOL_dt$col_ID)
plot_ctrl_chart = function(df, plot_center_line = T, increase_is_bad = T) {
# assign line color based on value
line_color_pal = c(if (any(df$p_chart_alert == "No alert")) {
OBI.color::prim_dark_blue()
},
if (increase_is_bad &
any(df$p_chart_alert == "Below LCL")) {
OBI.color::prim_teal()
},
if (increase_is_bad == F &
any(df$p_chart_alert == "Below LCL")) {
"#b64083"
},
if (any(df$p_chart_alert == "Shift")) {
"#f8b434"
},
if (increase_is_bad &
any(df$p_chart_alert == "Above UCL")) {
"#b64083"
},
if (increase_is_bad == F &
any(df$p_chart_alert == "Above UCL")) {
OBI.color::prim_teal()
})
line_values = unique(df$col_ID)
# sort value for line color assignment
# make sure if violation happened before shift, color assignments are correct
line_values_sort = line_values[order(line_values)]
# assign labels for legend
legend_lab = df %>% select(point_color, p_chart_alert) %>% group_by(point_color, p_chart_alert) %>% slice_head() %>% select(p_chart_alert) %>% pull()
# plot --------------------------------------------------------------------
plot_1 = ggplot(aes(x = date_var),
data = df) +
geom_ribbon(aes(ymin = LCL, ymax = UCL),
fill = "#CAC4CE",
alpha = 0.4) +
geom_point(
aes(y = rate, fill = point_color),
size = 3,
shape = 21,
stroke = 0
) +
scale_fill_identity(guide = guide_legend("Control chart alert"),
labels = legend_lab) +
theme_bw() +
scale_y_continuous(labels = scales::percent)
plot_2 = if (length(line_values) == 1) {
plot_1 +
geom_line(aes(y = rate, color = point_color), linewidth = 0.8) +
scale_color_identity(guide = "none")
}
else{
plot_1 +
geom_link2(aes(y = rate, color = col_ID), linewidth = 0.8) +
scale_color_gradientn(
colors = line_color_pal,
# values = scales::rescale(line_values),
values = scales::rescale(line_values),
guide = "none"
)
}
if (plot_center_line){plot_2 + geom_line(
aes(y = CL),
color = OBI.color::prim_dark_blue(),
linetype = "dashed",
linewidth = 0.75,
alpha = 0.5
)}
else{plot_2}
}
failed_IOL_dt = obi_cohort %>% filter(
planned_mode_of_delivery_cd == 1,
mode_of_delivery_cd == 4,
ces_primary_indication_cd == 1
) %>% structure_data(
infant_dob_dt,
failed_induction_num_compliance,
failed_induction_den_all,
increase_is_bad = F
)
failed_iol_ctrl_chart = failed_IOL_dt %>% plot_ctrl_chart(increase_is_bad = F)
failed_iol_ctrl_chart
plot_ctrl_chart = function(df, plot_center_line = T, increase_is_bad = T) {
# assign line color based on value
line_color_pal = c(if (any(df$p_chart_alert == "No alert")) {
OBI.color::prim_dark_blue()
},
if (increase_is_bad &
any(df$p_chart_alert == "Below LCL")) {
OBI.color::prim_teal()
},
if (increase_is_bad == F &
any(df$p_chart_alert == "Below LCL")) {
"#b64083"
},
if (any(df$p_chart_alert == "Shift")) {
"#f8b434"
},
if (increase_is_bad &
any(df$p_chart_alert == "Above UCL")) {
"#b64083"
},
if (increase_is_bad == F &
any(df$p_chart_alert == "Above UCL")) {
OBI.color::prim_teal()
})
line_values = unique(df$col_ID)
# sort value for line color assignment
# make sure if violation happened before shift, color assignments are correct
line_values_sort = line_values[order(line_values)]
# assign labels for legend
legend_lab = df %>% select(point_color, p_chart_alert) %>% group_by(point_color, p_chart_alert) %>% slice_head() %>% select(p_chart_alert) %>% pull()
# plot --------------------------------------------------------------------
plot_1 = ggplot(aes(x = date_var),
data = df) +
geom_ribbon(aes(ymin = LCL, ymax = UCL),
fill = "#CAC4CE",
alpha = 0.4) +
geom_point(
aes(y = rate, fill = point_color),
size = 3,
shape = 21,
stroke = 0
) +
scale_fill_identity(guide = guide_legend("Control chart alert"),
labels = legend_lab) +
theme_bw() +
scale_y_continuous(labels = scales::percent)
plot_2 = if (length(line_values) == 1) {
plot_1 +
geom_line(aes(y = rate, color = point_color), linewidth = 0.8) +
scale_color_identity(guide = "none")
}
else{
plot_1 +
geom_link2(aes(y = rate, color = col_ID), linewidth = 0.8) +
scale_color_gradientn(
colors = line_color_pal,
# values = scales::rescale(line_values),
values = scales::rescale(line_values_sort),
guide = "none"
)
}
if (plot_center_line){plot_2 + geom_line(
aes(y = CL),
color = OBI.color::prim_dark_blue(),
linetype = "dashed",
linewidth = 0.75,
alpha = 0.5
)}
else{plot_2}
}
failed_iol_ctrl_chart = failed_IOL_dt %>% plot_ctrl_chart(increase_is_bad = F)
failed_iol_ctrl_chart
OBI.color::all_colors(show_color = T)
plot_ctrl_chart = function(df, plot_center_line = T, increase_is_bad = T) {
# assign line color based on value
line_color_pal = c(if (any(df$p_chart_alert == "No alert")) {
OBI.color::prim_dark_blue()
},
if (increase_is_bad &
any(df$p_chart_alert == "Below LCL")) {
OBI.color::prim_teal()
},
if (increase_is_bad == F &
any(df$p_chart_alert == "Below LCL")) {
"#b64083"
},
if (any(df$p_chart_alert == "Shift")) {
"#f8b434"
},
if (increase_is_bad &
any(df$p_chart_alert == "Above UCL")) {
"#b64083"
},
if (increase_is_bad == F &
any(df$p_chart_alert == "Above UCL")) {
OBI.color::prim_teal()
})
line_values = unique(df$col_ID)
# sort value for line color assignment
# make sure if violation happened before shift, color assignments are correct
line_values_sort = line_values[order(line_values)]
# assign labels for legend
legend_lab = df %>% select(point_color, p_chart_alert) %>% group_by(point_color, p_chart_alert) %>% slice_head() %>% select(p_chart_alert) %>% pull()
color_pal_test = unique(df$point_color)
# plot --------------------------------------------------------------------
plot_1 = ggplot(aes(x = date_var),
data = df) +
geom_ribbon(aes(ymin = LCL, ymax = UCL),
fill = "#CAC4CE",
alpha = 0.4) +
geom_point(
aes(y = rate, fill = point_color),
size = 3,
shape = 21,
stroke = 0
) +
scale_fill_identity(guide = guide_legend("Control chart alert"),
labels = legend_lab) +
theme_bw() +
scale_y_continuous(labels = scales::percent)
plot_2 = if (length(line_values) == 1) {
plot_1 +
geom_line(aes(y = rate, color = point_color), linewidth = 0.8) +
scale_color_identity(guide = "none")
}
else{
plot_1 +
geom_link2(aes(y = rate, color = col_ID), linewidth = 0.8) +
scale_color_gradientn(
colors = color_pal_test,
# values = scales::rescale(line_values),
values = scales::rescale(line_values_sort),
guide = "none"
)
}
if (plot_center_line){plot_2 + geom_line(
aes(y = CL),
color = OBI.color::prim_dark_blue(),
linetype = "dashed",
linewidth = 0.75,
alpha = 0.5
)}
else{plot_2}
}
failed_IOL_dt = obi_cohort %>% filter(
planned_mode_of_delivery_cd == 1,
mode_of_delivery_cd == 4,
ces_primary_indication_cd == 1
) %>% structure_data(
infant_dob_dt,
failed_induction_num_compliance,
failed_induction_den_all,
increase_is_bad = F
)
failed_iol_ctrl_chart = failed_IOL_dt %>% plot_ctrl_chart(increase_is_bad = F)
failed_iol_ctrl_chart
obi_unplanned_ces = obi_cohort %>% filter(planned_mode_of_delivery_cd == 1, mode_of_delivery_cd == 4) %>% mutate(
ces_for_dystocia = ifelse(ces_primary_indication_cd %in% c(1:5), 1, 0),
ces_for_FHT = ifelse(ces_primary_indication_cd == 6, 1, 0),
ces_for_mat_req = ifelse(ces_primary_indication_cd == 20, 1, 0)
)
ces_ind_dys_dt = obi_unplanned_ces %>% structure_data(infant_dob_dt, ces_for_dystocia, cesarean)
ces_for_dys_ctrl_chart = ces_ind_dys_dt %>% plot_ctrl_chart()
ces_for_dys_ctrl_chart
ces_ind_FHT_dt = obi_unplanned_ces %>% structure_data(infant_dob_dt, ces_for_FHT, cesarean)
ces_ind_FHT_plot = ces_ind_FHT_dt %>% plot_ctrl_chart(increase_is_bad = F)
ces_ind_FHT_plot
ces_ind_FHT_plot = ces_ind_FHT_dt %>% plot_ctrl_chart()
ces_ind_FHT_plot
ces_ind_FHT_plot = ces_ind_FHT_dt %>% plot_ctrl_chart(increase_is_bad = F)
ces_ind_FHT_plot
ces_ind_FHT_dt = obi_unplanned_ces %>% structure_data(infant_dob_dt, ces_for_FHT, cesarean, increase_is_bad = F)
ces_ind_FHT_plot = ces_ind_FHT_dt %>% plot_ctrl_chart()
ces_ind_FHT_plot
SMM_dt = obi_cohort %>% structure_data(infant_dob_dt, SevereMaternalMorbidity, birth)
SMM_ctrl_chart = plot_ctrl_chart(SMM_dt)
SMM_ctrl_chart
View(SMM_ctrl_chart)
plot_ctrl_chart = function(df, plot_center_line = T, increase_is_bad = T) {
# assign line color based on value
# line_color_pal = c(if (any(df$p_chart_alert == "No alert")) {
#   OBI.color::prim_dark_blue()
# },
# if (increase_is_bad &
#     any(df$p_chart_alert == "Below LCL")) {
#   OBI.color::prim_teal()
# },
# if (increase_is_bad == F &
#     any(df$p_chart_alert == "Below LCL")) {
#   "#b64083"
# },
# if (any(df$p_chart_alert == "Shift")) {
#   "#f8b434"
# },
# if (increase_is_bad &
#     any(df$p_chart_alert == "Above UCL")) {
#   "#b64083"
# },
# if (increase_is_bad == F &
#     any(df$p_chart_alert == "Above UCL")) {
#   OBI.color::prim_teal()
# })
line_values = unique(df$col_ID)
# sort value for line color assignment
# make sure if violation happened before shift, color assignments are correct
line_values_sort = line_values[order(line_values)]
# assign labels for legend
legend_lab = df %>% select(point_color, p_chart_alert) %>% group_by(point_color, p_chart_alert) %>% slice_head() %>% select(p_chart_alert) %>% pull()
color_pal_test = unique(df$point_color)
# plot --------------------------------------------------------------------
plot_1 = ggplot(aes(x = date_var),
data = df) +
geom_ribbon(aes(ymin = LCL, ymax = UCL),
fill = "#CAC4CE",
alpha = 0.4) +
geom_point(
aes(y = rate, fill = point_color),
size = 3,
shape = 21,
stroke = 0
) +
scale_fill_identity(guide = guide_legend("Control chart alert"),
labels = legend_lab) +
theme_bw() +
scale_y_continuous(labels = scales::percent)
plot_2 = if (length(line_values) == 1) {
plot_1 +
geom_line(aes(y = rate, color = point_color), linewidth = 0.8) +
scale_color_identity(guide = "none")
}
else{
plot_1 +
geom_link2(aes(y = rate, color = col_ID), linewidth = 0.8) +
scale_color_gradientn(
colors = color_pal_test,
# values = scales::rescale(line_values),
values = scales::rescale(line_values_sort),
guide = "none"
)
}
if (plot_center_line){plot_2 + geom_line(
aes(y = CL),
color = OBI.color::prim_dark_blue(),
linetype = "dashed",
linewidth = 0.75,
alpha = 0.5
)}
else{plot_2}
}
failed_iol_ctrl_chart = failed_IOL_dt %>% plot_ctrl_chart(increase_is_bad = F)
failed_iol_ctrl_chart
obi_unplanned_ces = obi_cohort %>% filter(planned_mode_of_delivery_cd == 1, mode_of_delivery_cd == 4) %>% mutate(
ces_for_dystocia = ifelse(ces_primary_indication_cd %in% c(1:5), 1, 0),
ces_for_FHT = ifelse(ces_primary_indication_cd == 6, 1, 0),
ces_for_mat_req = ifelse(ces_primary_indication_cd == 20, 1, 0)
)
ces_ind_dys_dt = obi_unplanned_ces %>% structure_data(infant_dob_dt, ces_for_dystocia, cesarean)
ces_for_dys_ctrl_chart = ces_ind_dys_dt %>% plot_ctrl_chart()
ces_for_dys_ctrl_chart
ces_ind_FHT_dt = obi_unplanned_ces %>% structure_data(infant_dob_dt, ces_for_FHT, cesarean, increase_is_bad = F)
ces_ind_FHT_plot = ces_ind_FHT_dt %>% plot_ctrl_chart()
ces_ind_FHT_plot
SMM_dt = obi_cohort %>% structure_data(infant_dob_dt, SevereMaternalMorbidity, birth)
SMM_ctrl_chart = plot_ctrl_chart(SMM_dt)
SMM_ctrl_chart
plot_ctrl_chart = function(df, plot_center_line = T) {
# assign line color based on value
# line_color_pal = c(if (any(df$p_chart_alert == "No alert")) {
#   OBI.color::prim_dark_blue()
# },
# if (increase_is_bad &
#     any(df$p_chart_alert == "Below LCL")) {
#   OBI.color::prim_teal()
# },
# if (increase_is_bad == F &
#     any(df$p_chart_alert == "Below LCL")) {
#   "#b64083"
# },
# if (any(df$p_chart_alert == "Shift")) {
#   "#f8b434"
# },
# if (increase_is_bad &
#     any(df$p_chart_alert == "Above UCL")) {
#   "#b64083"
# },
# if (increase_is_bad == F &
#     any(df$p_chart_alert == "Above UCL")) {
#   OBI.color::prim_teal()
# })
line_values = unique(df$col_ID)
# sort value for line color assignment
# make sure if violation happened before shift, color assignments are correct
line_values_sort = line_values[order(line_values)]
# assign labels for legend
legend_lab = df %>% select(point_color, p_chart_alert) %>% group_by(point_color, p_chart_alert) %>% slice_head() %>% select(p_chart_alert) %>% pull()
# line color palette
line_color_pal = unique(df$point_color)
# plot --------------------------------------------------------------------
plot_1 = ggplot(aes(x = date_var),
data = df) +
geom_ribbon(aes(ymin = LCL, ymax = UCL),
fill = "#CAC4CE",
alpha = 0.4) +
geom_point(
aes(y = rate, fill = point_color),
size = 3,
shape = 21,
stroke = 0
) +
scale_fill_identity(guide = guide_legend("Control chart alert"),
labels = legend_lab) +
theme_bw() +
scale_y_continuous(labels = scales::percent)
plot_2 = if (length(line_values) == 1) {
plot_1 +
geom_line(aes(y = rate, color = point_color), linewidth = 0.8) +
scale_color_identity(guide = "none")
}
else{
plot_1 +
geom_link2(aes(y = rate, color = col_ID), linewidth = 0.8) +
scale_color_gradientn(
colors = line_color_pal,
values = scales::rescale(line_values_sort),
guide = "none"
)
}
if (plot_center_line){plot_2 + geom_line(
aes(y = CL),
color = OBI.color::prim_dark_blue(),
linetype = "dashed",
linewidth = 0.75,
alpha = 0.5
)}
else{plot_2}
}
failed_IOL_dt = obi_cohort %>% filter(
planned_mode_of_delivery_cd == 1,
mode_of_delivery_cd == 4,
ces_primary_indication_cd == 1
) %>% structure_data(
infant_dob_dt,
failed_induction_num_compliance,
failed_induction_den_all,
increase_is_bad = F
)
failed_iol_ctrl_chart = failed_IOL_dt %>% plot_ctrl_chart(increase_is_bad = F)
failed_iol_ctrl_chart = failed_IOL_dt %>% plot_ctrl_chart()
failed_iol_ctrl_chart
obi_unplanned_ces = obi_cohort %>% filter(planned_mode_of_delivery_cd == 1, mode_of_delivery_cd == 4) %>% mutate(
ces_for_dystocia = ifelse(ces_primary_indication_cd %in% c(1:5), 1, 0),
ces_for_FHT = ifelse(ces_primary_indication_cd == 6, 1, 0),
ces_for_mat_req = ifelse(ces_primary_indication_cd == 20, 1, 0)
)
ces_ind_dys_dt = obi_unplanned_ces %>% structure_data(infant_dob_dt, ces_for_dystocia, cesarean)
ces_for_dys_ctrl_chart = ces_ind_dys_dt %>% plot_ctrl_chart()
ces_for_dys_ctrl_chart
ces_ind_FHT_dt = obi_unplanned_ces %>% structure_data(infant_dob_dt, ces_for_FHT, cesarean, increase_is_bad = F)
ces_ind_FHT_plot = ces_ind_FHT_dt %>% plot_ctrl_chart()
ces_ind_FHT_plot
SMM_ctrl_chart = plot_ctrl_chart(SMM_dt)
SMM_ctrl_chart
setwd("C:/repos/obstinit")
roxygen2::roxygenise()
roxygen2::roxygenise()
