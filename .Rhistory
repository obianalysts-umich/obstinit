opioid_other_txt3,
opioid_unit_e1,
opioid_unit_e2,
opioid_unit_e3,
opioid_dose_no1,
opioid_dose_no2,
opioid_dose_no3,
opioid_quantity_no1,
opioid_quantity_no2,
opioid_quantity_no3,
#dates
admission_dt,
infant_dob_dt,
discharge_dt,
# LOS
LOS_adm_to_deliv,
LOS_adm_to_discharge,
#LCS
Patient_safety_culture,
#AHA
CNTRL,
BSC,
CBSATYPE,
MAPP3,
MAPP5,
MAPP8,
OBLEV,
NICBD,
HOSPBD,
NICHOS,
BIRTHS,
FTER,
FTENIC,
#nppes/taxonomy
delivering_prov_ID,
Provider_Enumeration_Date,
Provider_Gender_Code,
Taxonomy_Code_1,
Classification,
Specialization,
Display_Name,
Section,
#zip
affluence13_17,
disadvantage13_17,
disadvantage2_13_17,
ethnicimmigrant13_17,
sdi_score,
#prosperity region
prosperity_region
)
obi %>% count(prosp_region_char)
alex_prosp_reg = alex_random_prov %>% mutate(MiAIM_prosp_reg = paste0(prosperity_region, " - ", prosp_region_char))
alex_prosp_reg %>% count(MiAIM_prosp_reg)
alex_var = alex_prosp_reg %>% select(
#registry
patientid,
hospital_ID,
mom_age,
ethnicity_cd,
race_cd,
payment_source_e,
admit_service_e,
height_no,
height_unit_cd,
admit_weight_unit_cd,
admit_weight_no,
admit_bmi_no,
mother_ppreg_weight_unit_cd,
mother_ppreg_weight_no,
ppreg_bmi_no,
ppreg_diabetes_b,
gest_diabetes_b,
ppreg_chronic_hyper_b,
gest_hyper_b,
asthma_b,
alcohol_use_b,
tobacco_use_b,
quit_smoke_cd,
ecig_use_b,
ecig_quit_cd,
marijuana_use_b,
opioid_use_b,
opioid_use_status_e,
opioid_mat_cd,
planned_mode_of_delivery_cd,
planned_ces_prim_indic_cd,
l_ces_maternal_conditions_txt,
l_ces_fetal_conditions_txt,
forceps_attempt_b,
forceps_success_b,
vacuum_attempt_b,
vacuum_success_b,
delivery_service_cd,
mode_of_delivery_cd,
laceration_third_deg_b,
laceration_fourth_deg_b,
blood_loss_measure_cd,
blood_loss_volume_ml_no,
ab_nicu_admission_b,
discharge_opioid_e,
severe_complication_e,
severe_procedure_e,
opioid_e1,
opioid_e2,
opioid_e3,
opioid_other_txt1,
opioid_other_txt2,
opioid_other_txt3,
opioid_unit_e1,
opioid_unit_e2,
opioid_unit_e3,
opioid_dose_no1,
opioid_dose_no2,
opioid_dose_no3,
opioid_quantity_no1,
opioid_quantity_no2,
opioid_quantity_no3,
#dates
admission_dt,
infant_dob_dt,
discharge_dt,
# LOS
LOS_adm_to_deliv,
LOS_adm_to_discharge,
#LCS
Patient_safety_culture,
#AHA
CNTRL,
BSC,
CBSATYPE,
MAPP3,
MAPP5,
MAPP8,
OBLEV,
NICBD,
HOSPBD,
NICHOS,
BIRTHS,
FTER,
FTENIC,
#nppes/taxonomy
delivering_prov_ID,
Provider_Enumeration_Date,
Provider_Gender_Code,
Taxonomy_Code_1,
Classification,
Specialization,
Display_Name,
Section,
#zip
affluence13_17,
disadvantage13_17,
disadvantage2_13_17,
ethnicimmigrant13_17,
sdi_score,
#prosperity region
MiAIM_prosp_reg
)
# output final excel dataset ----------------------------------------------
## Turbo
openxlsx::write.xlsx(alex_var, file = "P:/Data Requests/Dataset requests/Alex_Peahl_MOUD_Feb_2023/results/amended_dataset_limited_12MAY2023.xlsx")
# libraries & dataset -----------------------------------------------------
library(tidyverse)
library(readxl)
library(lubridate)
library(zoo)
library(haven)
library(anonymizer)
install.packages("anonymizer")
obi = data.table::fread(
"P:/OBI_abstracted_data/Current_Data/data/output/sourcetables_OBI_export_recodes.csv",
) %>% mutate(
external_mdhhs_site_id = case_when(
external_mdhhs_site_id == 4001 ~ "04001",
external_mdhhs_site_id == 8001 ~ "08001",
external_mdhhs_site_id == 9005 ~ "09005",
TRUE ~ as.character(external_mdhhs_site_id)
)
)
dropbox_path = "C:/Users/Althea Bourdeau/Dropbox (University of Michigan)/MOPEN Requests OBI Data/Feb 2023/"
alex_cohort = obi %>% mutate(infant_dob_dt = dmy_hms(infant_dob_dt)) %>% filter(
flg_complete == 1,
infant_dob_dt >= lubridate::ymd_hms("2020-01-01 00:00:00"),
infant_dob_dt <= lubridate::ymd_hms("2022-09-30 23:59:59")
)
alex_dates = alex_cohort %>% mutate(
admission_dt = dmy_hms(admission_dt),
admission_year = year(admission_dt),
discharge_dt = dmy_hms(discharge_dt),
discharge_year = year(discharge_dt),
LOS_adm_to_discharge = difftime(discharge_dt, admission_dt, units = "days"),
LOS_adm_to_deliv = difftime(infant_dob_dt, admission_dt, units = "days")
) %>% mutate(
admission_dt = format(admission_dt, format = "%m/%d/%Y"),
discharge_dt = format(discharge_dt, format = "%m/%d/%Y"),
infant_dob_dt = format(infant_dob_dt, format = "%m/%d/%Y")
)
LCS = data.table::fread(
"J:/Culture Survey/LCS Analytics/2022/Programs, Data & Logs/Data/Output/FINAL output/Poisson dataset for Xilin_TB_10.27.2022.csv",
keepLeadingZeros = T
)
LCS = data.table::fread(
"J:/Culture Survey/LCS Analytics/2022/Programs, Data & Logs/Data/Output/FINAL output/Poisson dataset for Xilin_TB_10.27.2022.csv",
keepLeadingZeros = T
)
LCS = data.table::fread(
"J:/Culture Survey/LCS Analytics/2022/Programs, Data & Logs/Data/Output/FINAL output/Poisson dataset for Xilin_TB_10.27.2022.csv",
keepLeadingZeros = T
)
LCS_var = LCS %>% select(mdhhs_id_char, Patient_safety_culture)
alex_LCS = left_join(alex_dates, LCS_var, by = c("external_mdhhs_site_id" = "mdhhs_id_char"))
alex_cohort = obi %>% mutate(infant_dob_dt = dmy_hms(infant_dob_dt)) %>% filter(
flg_complete == 1,
infant_dob_dt >= lubridate::ymd_hms("2020-01-01 00:00:00"),
infant_dob_dt <= lubridate::ymd_hms("2023-01-31 23:59:59")
)
alex_cohort = obi %>% mutate(infant_dob_dt = dmy_hms(infant_dob_dt)) %>% filter(
flg_complete == 1,
infant_dob_dt >= lubridate::ymd_hms("2020-01-01 00:00:00"),
infant_dob_dt <= lubridate::ymd_hms("2022-09-30 23:59:59")
)
alex_cohort = obi %>% mutate(infant_dob_dt = dmy_hms(infant_dob_dt)) %>% filter(
flg_complete == 1,
infant_dob_dt >= lubridate::ymd_hms("2020-01-01 00:00:00"),
infant_dob_dt <= lubridate::ymd_hms("2023-01-31 23:59:59")
)
alex_dates = alex_cohort %>% mutate(
admission_dt = dmy_hms(admission_dt),
admission_year = year(admission_dt),
discharge_dt = dmy_hms(discharge_dt),
discharge_year = year(discharge_dt),
LOS_adm_to_discharge = difftime(discharge_dt, admission_dt, units = "days"),
LOS_adm_to_deliv = difftime(infant_dob_dt, admission_dt, units = "days")
) %>% mutate(
admission_dt = format(admission_dt, format = "%m/%d/%Y"),
discharge_dt = format(discharge_dt, format = "%m/%d/%Y"),
infant_dob_dt = format(infant_dob_dt, format = "%m/%d/%Y")
)
alex_LCS = left_join(alex_dates, LCS_var, by = c("external_mdhhs_site_id" = "mdhhs_id_char"))
### keep only requested variables
AHA_var = AHA %>% select(
external_mdhhs_site_id,
CNTRL,
BSC,
CBSATYPE,
MAPP3,
MAPP5,
MAPP8,
OBLEV,
NICBD,
HOSPBD,
NICHOS,
BIRTHS,
FTER,
FTENIC
)
AHA = read_sas(
"P:/OBI hospital and provider/OBI Hospital Information/aha2020_obihospitals.sas7bdat"
)
View(AHA)
### keep only requested variables
AHA_var = AHA %>% select(
external_mdhhs_site_id,
CNTRL,
BSC,
CBSATYPE,
MAPP3,
MAPP5,
MAPP8,
OBLEV,
NICBD,
HOSPBD,
NICHOS,
BIRTHS,
FTER,
FTENIC
)
alex_AHA = left_join(alex_LCS, AHA_var, by = c("external_mdhhs_site_id"))
prov_tax = data.table::fread(
"P:/OBI hospital and provider/OBI Provider Information/AMx prov list_INTERNAL prov ID_1.18.2023.csv"
)
prov_tax_var = prov_tax %>% select(npi, internal_provider_id)
alex_prov_tax = left_join(alex_AHA,
prov_tax_var,
by = c("delivery_professional_id" = "internal_provider_id")) %>% mutate(npi = as.character(npi))
nppes = read_sas(paste0(dropbox_path, "/Data Request/nppes2023.sas7bdat"))
alex_nppes = left_join(alex_prov_tax, nppes, by = c("npi" = "NPI"))
taxonomy = read_sas(paste0(dropbox_path, "/Data Request/taxonomy.sas7bdat")) %>% select(-c(Grouping, Definition, Notes))
alex_taxonomy = left_join(alex_nppes, taxonomy, by = c("Taxonomy_Code_1" = "Code"))
zip = read_sas(paste0(dropbox_path, "/Data Request/ses_sdi.sas7bdat"))
alex_zip = left_join(alex_taxonomy, zip, by = c("zip_new" = "ZIP_CODE"))
rand_site_ID = data.table::fread(file = "P:/Data Requests/Dataset requests/Alex_Peahl_MOUD_Feb_2023/results/site_ID_key.csv", keepLeadingZeros = T) %>% select(external_mdhhs_site_id, anon_ID)
alex_random_site = left_join(alex_zip, rand_site_ID, by = c("external_mdhhs_site_id")) %>% rename(hospital_ID = anon_ID)
rand_prov_ID = data.table::fread(file = "P:/Data Requests/Dataset requests/Alex_Peahl_MOUD_Feb_2023/results/prov_ID_key.csv", keepLeadingZeros = T) %>% select(-c(V1)) %>% mutate(npi = as.character(npi))
alex_random_prov = left_join(alex_random_site, rand_prov_ID, by = c("npi")) %>% mutate(delivering_prov_ID = ifelse(is.na(npi), as.character(NA), delivering_prov_ID))
alex_prosp_reg = alex_random_prov %>% mutate(MiAIM_prosp_reg = paste0(prosperity_region, " - ", prosp_region_char))
alex_var = alex_prosp_reg %>% select(
#registry
patientid,
hospital_ID,
mom_age,
ethnicity_cd,
race_cd,
payment_source_e,
admit_service_e,
height_no,
height_unit_cd,
admit_weight_unit_cd,
admit_weight_no,
admit_bmi_no,
mother_ppreg_weight_unit_cd,
mother_ppreg_weight_no,
ppreg_bmi_no,
ppreg_diabetes_b,
gest_diabetes_b,
ppreg_chronic_hyper_b,
gest_hyper_b,
asthma_b,
alcohol_use_b,
tobacco_use_b,
quit_smoke_cd,
ecig_use_b,
ecig_quit_cd,
marijuana_use_b,
opioid_use_b,
opioid_use_status_e,
opioid_mat_cd,
planned_mode_of_delivery_cd,
planned_ces_prim_indic_cd,
l_ces_maternal_conditions_txt,
l_ces_fetal_conditions_txt,
forceps_attempt_b,
forceps_success_b,
vacuum_attempt_b,
vacuum_success_b,
delivery_service_cd,
mode_of_delivery_cd,
laceration_third_deg_b,
laceration_fourth_deg_b,
blood_loss_measure_cd,
blood_loss_volume_ml_no,
ab_nicu_admission_b,
discharge_opioid_e,
severe_complication_e,
severe_procedure_e,
opioid_e1,
opioid_e2,
opioid_e3,
opioid_other_txt1,
opioid_other_txt2,
opioid_other_txt3,
opioid_unit_e1,
opioid_unit_e2,
opioid_unit_e3,
opioid_dose_no1,
opioid_dose_no2,
opioid_dose_no3,
opioid_quantity_no1,
opioid_quantity_no2,
opioid_quantity_no3,
#dates
admission_dt,
infant_dob_dt,
discharge_dt,
# LOS
LOS_adm_to_deliv,
LOS_adm_to_discharge,
#LCS
Patient_safety_culture,
#AHA
CNTRL,
BSC,
CBSATYPE,
MAPP3,
MAPP5,
MAPP8,
OBLEV,
NICBD,
HOSPBD,
NICHOS,
BIRTHS,
FTER,
FTENIC,
#nppes/taxonomy
delivering_prov_ID,
Provider_Enumeration_Date,
Provider_Gender_Code,
Taxonomy_Code_1,
Classification,
Specialization,
Display_Name,
Section,
#zip
affluence13_17,
disadvantage13_17,
disadvantage2_13_17,
ethnicimmigrant13_17,
sdi_score,
#prosperity region
MiAIM_prosp_reg
)
alex_var = alex_prosp_reg %>% select(
#registry
patientid,
hospital_ID,
mom_age,
ethnicity_cd,
race_cd,
payment_source_e,
admit_service_e,
height_no,
height_unit_cd,
admit_weight_unit_cd,
admit_weight_no,
admit_bmi_no,
mother_ppreg_weight_unit_cd,
mother_ppreg_weight_no,
ppreg_bmi_no,
ppreg_diabetes_b,
gest_diabetes_b,
ppreg_chronic_hyper_b,
gest_hyper_b,
asthma_b,
alcohol_use_b,
tobacco_use_b,
quit_smoke_cd,
ecig_use_b,
ecig_quit_cd,
marijuana_use_b,
opioid_use_b,
opioid_use_status_e,
opioid_mat_cd,
planned_mode_of_delivery_cd,
planned_ces_prim_indic_cd,
planned_ces_mat_cond_txt,
planned_ces_fet_cond_txt,
forceps_attempt_b,
forceps_success_b,
vacuum_attempt_b,
vacuum_success_b,
delivery_service_cd,
mode_of_delivery_cd,
laceration_third_deg_b,
laceration_fourth_deg_b,
blood_loss_measure_cd,
blood_loss_volume_ml_no,
ab_nicu_admission_b,
discharge_opioid_e,
severe_complication_e,
severe_procedure_e,
opioid_e1,
opioid_e2,
opioid_e3,
opioid_other_txt1,
opioid_other_txt2,
opioid_other_txt3,
opioid_unit_e1,
opioid_unit_e2,
opioid_unit_e3,
opioid_dose_no1,
opioid_dose_no2,
opioid_dose_no3,
opioid_quantity_no1,
opioid_quantity_no2,
opioid_quantity_no3,
#dates
admission_dt,
infant_dob_dt,
discharge_dt,
# LOS
LOS_adm_to_deliv,
LOS_adm_to_discharge,
#LCS
Patient_safety_culture,
#AHA
CNTRL,
BSC,
CBSATYPE,
MAPP3,
MAPP5,
MAPP8,
OBLEV,
NICBD,
HOSPBD,
NICHOS,
BIRTHS,
FTER,
FTENIC,
#nppes/taxonomy
delivering_prov_ID,
Provider_Enumeration_Date,
Provider_Gender_Code,
Taxonomy_Code_1,
Classification,
Specialization,
Display_Name,
Section,
#zip
affluence13_17,
disadvantage13_17,
disadvantage2_13_17,
ethnicimmigrant13_17,
sdi_score,
#prosperity region
MiAIM_prosp_reg
)
# output final excel dataset ----------------------------------------------
## Turbo
openxlsx::write.xlsx(alex_var, file = "P:/Data Requests/Dataset requests/Alex_Peahl_MOUD_Feb_2023/results/amended_dataset_limited_18MAY2023.xlsx")
setwd("C:/repos/obstinit")
roxygen2::roxygenise()
